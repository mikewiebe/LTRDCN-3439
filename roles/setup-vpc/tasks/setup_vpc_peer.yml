---

- name: query leaf serial number of {{ fabric.name }}
  cisco.dcnm.dcnm_inventory:
    fabric: "{{ fabric.name }}"
    state: query
    config:
      - seed_ip: "{{ fabric.leaf[0].ip }}"
      - seed_ip: "{{ fabric.leaf[1].ip }}"
  register: leaf_sws

- name: enable peer link on leaf switches of {{ fabric.name }}
  cisco.dcnm.dcnm_interface:
    fabric: "{{ fabric.name }}"
    state: merged
    config:
      - name: eth1/8
        type: eth
        admin_state: true
        switch:
          - "{{ leaf.ip }}"
        profile:
          mode: trunk
      - name: eth1/9
        type: eth
        admin_state: true
        switch:
          - "{{ leaf.ip }}"
        profile:
          mode: trunk
  ignore_errors: true
  loop: "{{ fabric.leaf }}"
  loop_control:
    loop_var: leaf

- name: create VPC peer on leaf {{ fabric.leaf[0].ip }}|{{ fabric.leaf[1].ip }}
  vars:
    payload:
      peerOneId: "{{leaf_sws.response[0].serialNumber}}"
      peerTwoId: "{{leaf_sws.response[1].serialNumber}}"
      useVirtualPeerlink: false
  cisco.dcnm.dcnm_rest:
    method: POST
    path: "/appcenter/cisco/ndfc/api/v1/lan-fabric/rest/vpcpair"
    json_data: "{{ payload | to_json }}"
  ignore_errors: true

- name: save config of fabric {{fabric.name}}
  cisco.dcnm.dcnm_rest:
    method: POST
    path: "/appcenter/cisco/ndfc/api/v1/lan-fabric/rest/control/fabrics/{{fabric.name}}/config-save"

- name: re-deploy inventory {{fabric.name}}
  cisco.dcnm.dcnm_rest:
    path: "/appcenter/cisco/ndfc/api/v1/lan-fabric/rest/control/fabrics/{{fabric.name}}/config-deploy?forceShowRun=false"
    method: POST
