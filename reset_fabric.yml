
---
# This Ansible Playbook is used to Reset The Fabric

- name: Reset Fabric on NDFC
  hosts: ndfc
  gather_facts: false

  tasks:
    - name: Verify NDFC fabric {{ fabric.name }} State
      cisco.dcnm.dcnm_rest:
        method: GET
        path: "/appcenter/cisco/ndfc/api/v1/lan-fabric/rest/control/fabrics"
      register: result

    - ansible.builtin.debug:
        msg: "Number of NDFC Fabrics - {{ result.response.DATA | length }}"

    - ansible.builtin.debug:
        msg: "{{ item.fabricName }}"
      loop: "{{ result.response.DATA }}"
      loop_control:
        label: "{{ item.fabricName }}"

    - ansible.builtin.set_fact:
        fabric_reset: False
    - ansible.builtin.set_fact:
        fabric_reset: True
      when: result.response.DATA | length == 2

    - ansible.builtin.debug:
        msg: "Fabric {{ fabric.name }} has already been reset"
      when: fabric_reset == False

    - name: Remove switch devices from NDFC fabric {{ fabric.name }}
      cisco.dcnm.dcnm_inventory:
        fabric: "{{ fabric.name }}"
        state: deleted
      when: fabric_reset

    - name: Delete fabric {{ fabric.name }} from NDFC
      cisco.dcnm.dcnm_rest:
        method: DELETE
        path: "/appcenter/cisco/ndfc/api/v1/lan-fabric/rest/control/fabrics/{{ fabric.name }}"
      when: fabric_reset

    - name: Verify NDFC fabric {{ fabric.name }} State
      cisco.dcnm.dcnm_rest:
        method: GET
        path: "/appcenter/cisco/ndfc/api/v1/lan-fabric/rest/control/fabrics"
      register: result

    - ansible.builtin.debug:
        msg: "Number of NDFC Fabrics - {{ result.response.DATA | length }}"

